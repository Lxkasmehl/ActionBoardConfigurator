"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[276],{4805:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"developer-guide/api-documentation","title":"API Documentation","description":"This documentation describes the internal APIs and data structures used in the WebAppConfigurator.","source":"@site/docs/developer-guide/api-documentation.md","sourceDirName":"developer-guide","slug":"/developer-guide/api-documentation","permalink":"/WebAppConfigurator/docs/developer-guide/api-documentation","draft":false,"unlisted":false,"editUrl":"https://github.com/pentos/webappconfigurator/tree/main/docs/developer-guide/api-documentation.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Development Setup","permalink":"/WebAppConfigurator/docs/developer-guide/setup"},"next":{"title":"Contributing Guidelines","permalink":"/WebAppConfigurator/docs/developer-guide/contributing"}}');var r=t(4848),s=t(8453);const l={sidebar_position:3},d="API Documentation",o={},a=[{value:"Data Picker API",id:"data-picker-api",level:2},{value:"Node Types",id:"node-types",level:3},{value:"Flow Structure",id:"flow-structure",level:3},{value:"Entity Section Configuration",id:"entity-section-configuration",level:3},{value:"UI Builder API",id:"ui-builder-api",level:2},{value:"Component Library",id:"component-library",level:3},{value:"Component Types",id:"component-types",level:3},{value:"Redux State Structure",id:"redux-state-structure",level:2},{value:"Data Picker State",id:"data-picker-state",level:3},{value:"UI Builder State",id:"ui-builder-state",level:3},{value:"Export API",id:"export-api",level:2},{value:"Development Guidelines",id:"development-guidelines",level:2},{value:"Adding New Node Types",id:"adding-new-node-types",level:3},{value:"Creating New Components",id:"creating-new-components",level:3},{value:"State Management",id:"state-management",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Data Picker",id:"data-picker",level:3},{value:"UI Builder",id:"ui-builder",level:3},{value:"Export Process",id:"export-process",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"api-documentation",children:"API Documentation"})}),"\n",(0,r.jsx)(n.p,{children:"This documentation describes the internal APIs and data structures used in the WebAppConfigurator."}),"\n",(0,r.jsx)(n.h2,{id:"data-picker-api",children:"Data Picker API"}),"\n",(0,r.jsx)(n.h3,{id:"node-types",children:"Node Types"}),"\n",(0,r.jsx)(n.p,{children:"The Data Picker uses a flow-based system with the following node types:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// From app.constants.js\nexport const NODE_TYPES = {\n  EntitySection: EntitySection,\n  FlowStart: FlowStart,\n};\n\nexport const EDGE_TYPES = {\n  ButtonEdge: ButtonEdge,\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"flow-structure",children:"Flow Structure"}),"\n",(0,r.jsx)(n.p,{children:"A flow consists of nodes and edges with the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface Node {\n  id: string;\n  type: 'EntitySection' | 'FlowStart';\n  position: {\n    x: number;\n    y: number;\n  };\n  data?: {\n    entity?: string;\n    filters?: Filter[];\n    properties?: string[];\n  };\n}\n\ninterface Edge {\n  id: string;\n  source: string;\n  target: string;\n  type: 'ButtonEdge';\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"entity-section-configuration",children:"Entity Section Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Each Entity Section node can be configured with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Entity selection"}),"\n",(0,r.jsx)(n.li,{children:"Property filters"}),"\n",(0,r.jsx)(n.li,{children:"Selected properties"}),"\n",(0,r.jsx)(n.li,{children:"Connection points for data flow"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"ui-builder-api",children:"UI Builder API"}),"\n",(0,r.jsx)(n.h3,{id:"component-library",children:"Component Library"}),"\n",(0,r.jsx)(n.p,{children:"The UI Builder provides a library of components that can be used to build interfaces:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface Component {\n  id: string;\n  type: string;\n  props: {\n    [key: string]: any;\n  };\n  position: {\n    x: number;\n    y: number;\n  };\n  dataSource?: {\n    flowId: string;\n    mapping: {\n      [key: string]: string;\n    };\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"component-types",children:"Component Types"}),"\n",(0,r.jsx)(n.p,{children:"Available component types include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Text components"}),"\n",(0,r.jsx)(n.li,{children:"Input fields"}),"\n",(0,r.jsx)(n.li,{children:"Buttons"}),"\n",(0,r.jsx)(n.li,{children:"Containers"}),"\n",(0,r.jsx)(n.li,{children:"Data displays"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"redux-state-structure",children:"Redux State Structure"}),"\n",(0,r.jsx)(n.h3,{id:"data-picker-state",children:"Data Picker State"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface DataPickerState {\n  nodes: Node[];\n  edges: Edge[];\n  selectedNode: string | null;\n  flowId: string;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ui-builder-state",children:"UI Builder State"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface UIBuilderState {\n  components: Component[];\n  selectedComponent: string | null;\n  layout: {\n    width: number;\n    height: number;\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"export-api",children:"Export API"}),"\n",(0,r.jsx)(n.p,{children:"The export process generates a new React project with the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ExportConfig {\n  components: Component[];\n  dataFlows: {\n    [flowId: string]: {\n      nodes: Node[];\n      edges: Edge[];\n    };\n  };\n  theme: ThemeConfig;\n  routing: RouteConfig[];\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"development-guidelines",children:"Development Guidelines"}),"\n",(0,r.jsx)(n.h3,{id:"adding-new-node-types",children:"Adding New Node Types"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Create the component in ",(0,r.jsx)(n.code,{children:"features/dataPicker/components"})]}),"\n",(0,r.jsxs)(n.li,{children:["Register the node type in ",(0,r.jsx)(n.code,{children:"app.constants.js"})]}),"\n",(0,r.jsx)(n.li,{children:"Update the Redux state to handle the new node type"}),"\n",(0,r.jsx)(n.li,{children:"Add necessary validation and error handling"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"creating-new-components",children:"Creating New Components"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Define the component interface"}),"\n",(0,r.jsxs)(n.li,{children:["Implement the component in ",(0,r.jsx)(n.code,{children:"features/uiBuilder/components"})]}),"\n",(0,r.jsx)(n.li,{children:"Add to the component library"}),"\n",(0,r.jsx)(n.li,{children:"Update the export process if needed"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"state-management",children:"State Management"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Use Redux Toolkit for state management"}),"\n",(0,r.jsx)(n.li,{children:"Create new slices for new features"}),"\n",(0,r.jsx)(n.li,{children:"Use selectors for accessing state"}),"\n",(0,r.jsx)(n.li,{children:"Implement proper error handling"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"data-picker",children:"Data Picker"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep node types simple and focused"}),"\n",(0,r.jsx)(n.li,{children:"Validate connections between nodes"}),"\n",(0,r.jsx)(n.li,{children:"Handle edge cases in the flow"}),"\n",(0,r.jsx)(n.li,{children:"Provide clear error messages"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"ui-builder",children:"UI Builder"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Make components reusable"}),"\n",(0,r.jsx)(n.li,{children:"Support data binding"}),"\n",(0,r.jsx)(n.li,{children:"Handle responsive layouts"}),"\n",(0,r.jsx)(n.li,{children:"Validate component configurations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"export-process",children:"Export Process"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validate all configurations"}),"\n",(0,r.jsx)(n.li,{children:"Include necessary dependencies"}),"\n",(0,r.jsx)(n.li,{children:"Generate clean, maintainable code"}),"\n",(0,r.jsx)(n.li,{children:"Provide clear documentation"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var i=t(6540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);